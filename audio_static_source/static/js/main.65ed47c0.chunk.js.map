{"version":3,"sources":["component/signIn/style.css","component/audioList/styles.css","tools/networker.js","component/audioSplit/index.js","component/splitParam/index.js","component/audio/index.js","component/signIn/action.js","store/reducers.js","component/signIn/reducers.js","store/index.js","component/signIn/index.js","component/audioList/index.js","component/progressBar/index.js","App.js","serviceWorker.js","index.js","component/splitParam/styles.css","App.css","component/audio/style.css"],"names":["module","exports","container","formArea","inputArea","input","buttonGroup","userInfo","header","loginController","userDesc","uploadConevent","url","obj","console","log","Promise","res","rej","xhr","XMLHttpRequest","open","send","onreadystatechange","data","srcElement","status","readyState","post","setRequestHeader","withCredentials","originPosition","currentPosition","AudioSplit","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderFream","init","ac","state","audioCtx","current","sampleRate","samplesPerPixel","zoomLevels","mono","waveHeight","timescale","colors","waveOutlineColor","timeColor","fadeColor","controls","show","load","src","audioSrc","name","gain","states","cursor","fadein","fadeout","select","shift","document","querySelector","style","height","initDrag","e","clientX","dataTransfer","effectAllowed","getPosition","target","temp","pageX","offsetLeft","clientWidth","draged","left","setState","setEndPosition","AudioContext","React","createRef","audio","ruler","waveform","undefined","createMediaElementSource","nextProps","innerHTML","react_default","a","createElement","position","width","minWidth","maxWidth","ref","onDragStart","onDragEnd","draggable","onDrag","top","backgroundColor","zIndex","onLoadedMetadata","crossOrigin","Component","SplitParams","postCutData","canSubmit","JSON","stringify","audioId","start","startHour","startMin","startSec","end","endHour","endMin","endSec","alert","changeTime","flag","value","_this2","className","styles","type","maxLength","max","min","onChange","placeholder","title","onClick","fontSize","add","remove","index","exRule","Audio","handlerFile","files","length","extname","includes","file","fileName","muiltConvert","toConsumableArray","nameList","map","item","submit","fd","FormData","window","location","origin","append","bitdpth","countOfChannel","outputFormat","then","fileInformation","parse","response","submitMulitpleAudio","Array","removeParams","_ref","asyncToGenerator","regenerator_default","mark","_callee","itemKey","split","wrap","_context","prev","next","splitArray","concat","slice","sent","filter","stop","_x","apply","arguments","addNewSplitParam","Date","now","push","element","splitParam_SplitParams","key","parameterAreaStatus","hiddenParamArea","muiltFileButton","autoSplit","display","parameterArea","parameterItem","menu","multiple","disabled","descripiton","audioSplit_AudioSplit","splitParamsArea","IS_LOGIN","UNLOGIN","isLogin","reducers","combineReducers","actions","action","store","createStore","SignIn","hidden","dispatch","login","account","password","root","NaN","user_id","user_name","cookies","getAll","cookie","AudioList","showLoginPage","loginPageStatus","listContainer","ProgressBar","subscribe","getState","audioList_AudioList","signIn","audio_Audio","App","es6","progressBar_ProgressBar","Boolean","hostname","match","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","playlist-time-scale"],"mappings":"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","file":"static/js/main.65ed47c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2bpTTX-dBxeg0BAjur_v_C\",\"formArea\":\"_1xL-WgAwpJpHHct1Ebjss_\",\"inputArea\":\"_3Za01WKEH9a5BV9ZVQoSbm\",\"input\":\"J31X_-Yb9F_PLQ7sBu93\",\"buttonGroup\":\"_3hND9kJc4TA6HAFGF3PMri\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3iXiG51366e7S49h9Wm0q6\",\"userInfo\":\"_35RvdGyCfRrFyfJ_BdwmGC\",\"header\":\"_2jPEgaM0E5VgOPWekYerxn\",\"loginController\":\"_2cYuvjChPZm0dE_wAzggQx\",\"userDesc\":\"_23NlnBfJqzy7E9xpQhB5o2\"};","function addHookForXHR(){\n    \n}\nconst getSource = (url, audioCtx) => {\n    return new Promise((res, rej) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.onload = () => {\n            let audioData = xhr.response;\n            audioCtx.decodeAudioData(audioData, (buffer) => {\n                res(buffer);\n            },\n                function (e) { console.log(\"Error with decoding audio data\" + e.err); });\n\n        }\n        xhr.send();\n    });\n}\nconst uploadConevent = (url, obj) => {\n    console.log(obj)\n    return new Promise((res, rej) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', url);\n        xhr.send(obj);\n        xhr.onreadystatechange = data => {\n            if (data.srcElement.status === 200) {\n                if (data.srcElement.readyState === 4) {\n                    res(data);\n                }\n            }\n        }\n    });\n}\nconst post = (url, obj) => {\n    return new Promise((res, rej) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', url);\n        xhr.setRequestHeader('Content-type','application/json');\n        xhr.withCredentials = true;\n        xhr.send(obj);\n        xhr.onreadystatechange = data => {\n            if (data.srcElement.status === 200) {\n                if (data.srcElement.readyState === 4) {\n                    res(data.srcElement);\n                }\n            }\n        }\n    });\n}\nexport {\n    getSource, uploadConevent, post\n}","import React, { Component } from 'react';\nimport { init } from 'waveform-playlist';\nlet originPosition = 0, currentPosition = 0;\nexport default class AudioSplit extends Component {\n    constructor(props) {\n        super(props);\n        const audioCtx = new AudioContext();\n        this.container = React.createRef();\n        this.audio = React.createRef();\n        this.ruler = React.createRef();\n        this.state = {\n            audioCtx: audioCtx,\n            waveform: undefined,\n            draged: false\n        }\n\n    }\n    componentDidMount() {\n        const audioCtx = this.state.audioCtx;\n        const stream = audioCtx.createMediaElementSource(this.audio.current);\n    }\n    shouldComponentUpdate(nextProps){\n        if(nextProps.audioSrc !== this.props.audioSrc){\n            this.container.current.innerHTML = '';\n          \n            console.log(this.container.current.innerHTML);\n            return true\n        }\n        return true\n    }\n    renderFream = () => {\n\n        const waveform = init({\n            ac: this.state.audioCtx,\n            container: this.container.current,\n            sampleRate: this.state.audioCtx.sampleRate,\n            samplesPerPixel: 4096,\n            zoomLevels: [512, 1024, 2048, 4096],\n            mono: true,\n            waveHeight: 180,\n            state: 'cursor',\n            timescale: true,\n            colors: {\n                waveOutlineColor: 'grey',\n                timeColor: 'black',\n                fadeColor: 'black'\n            },\n            controls: {\n                show: false\n            },\n        });\n        waveform.load([\n            {\n                src: this.props.audioSrc,\n                name: 'Vocals',\n                gain: 0.5,\n                waveOutlineColor: '#83d0f2',\n                states: {\n                    cursor: true,\n                    fadein: true,\n                    fadeout: true,\n                    select: true,\n                    shift: true,\n                },\n            }\n        ]);\n        document.querySelector('.playlist-time-scale').style.height = '29px';\n    }\n    initDrag = e => {\n        originPosition = e.clientX - currentPosition;\n        e.dataTransfer.effectAllowed = \"move\";\n    }\n    getPosition = (e) => {\n        let target = e.target;\n        let temp = e.pageX;\n        console.log(temp)\n        if (target.offsetLeft >= this.container.current.clientWidth) {\n            return;\n        }\n        if(e.pageX === 0){\n            return;\n        }\n        if(!this.state.draged){\n            target.style.left = temp - originPosition + 'px';\n            currentPosition = temp - originPosition;\n        }else{\n            target.style.left = currentPosition + 'px';\n            this.setState({\n                draged:false\n            })\n        }\n    }\n    setEndPosition = e => {\n        console.log('end' + currentPosition)\n        e.target.style.left = currentPosition + 'px';\n        this.setState({\n            draged:true\n        })\n    }\n    render() {\n        return (\n            <div style={{ position: 'relative', width: '100%', height: '50%' }} >\n                <div style={{ minWidth: '100%', height: '100%', maxWidth: 'auto' }} ref={this.container} ></div>\n                <div onDragStart={this.initDrag} onDragEnd={this.setEndPosition} draggable=\"true\" onDrag={this.getPosition} style={{\n                    position: 'absolute',\n                    width: '1px',\n                    height: '100%',\n                    top: '0px',\n                    left: '0px',\n                    backgroundColor: 'red',\n                    zIndex: 100\n                }} ref={this.ruler}></div>\n                <audio src={this.props.audioSrc} ref={this.audio} onLoadedMetadata={this.renderFream} crossOrigin=\"anonymous\"></audio>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport styles from './styles.css';\nimport { post } from '../../tools/networker';\nexport default class SplitParams extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            startHour: '00',\n            startMin: '00',\n            startSec: '00',\n            endHour: '00',\n            endMin: '00',\n            endSec: '00',\n            canSubmit: false\n        }\n    }\n    postCutData = () => {\n        let e = this.state;\n        if(!this.state.canSubmit){\n            alert('Plase change end time');\n            return;\n        }\n        post('http://112.74.165.209:5000/manualCut', JSON.stringify({\n            audioId: 9,\n            start: e.startHour + ':' + e.startMin + ':' + e.startSec,\n            end: e.endHour + ':' + e.endMin + ':' + e.endSec\n        }))\n    }\n    changeTime = (e, flag) => {\n        let value = e.target.value;\n        if (value > 59 || value < 0) {\n            alert('Time format is wrong');\n            value = 59;\n        }\n        if (value < 10) {\n            value = '0' + e.target.value;\n        }\n        this.setState({\n            canSubmit:true\n        })\n        switch (flag) {\n            case 'startHour': this.setState({ startHour: value }); break;\n            case 'startMin': this.setState({ startMin: value }); break;\n            case 'startSec': this.setState({ startSec: value }); break;\n            case 'endHour': this.setState({ endHour: value }); break;\n            case 'endMin': this.setState({ endMin: value }); break;\n            case 'endSec': this.setState({ endSec: value }); break;\n            default: throw 'must have type of time'\n        }\n    }\n    render() {\n        return (\n            <div className={styles.container}>\n                <label>start time</label>\n                <input type=\"number\" value={this.state.startHour} maxLength={2} max={59} min={0} onChange={(e) => this.changeTime(e, 'startHour')} placeholder=\"hours\"></input>\n                <span>:</span>\n                <input type=\"number\" value={this.state.startMin} maxLength={2} max={59} min={0} onChange={(e) => this.changeTime(e, 'startMin')} placeholder=\"minutes\"></input><span>:</span>\n                <input type=\"number\" value={this.state.startSec} maxLength={2} max={59} min={0} placeholder=\"seconds\" onChange={(e) => this.changeTime(e, 'startSec')}></input>\n                <span>~</span>\n                <label>end time</label>\n                <input\n                    type=\"number\"\n                    value={this.state.endHour}\n                    maxLength={2} max={59} min={0}\n                    placeholder=\"hours\" onChange={(e) => this.changeTime(e, 'endHour')}\n                ></input><span>:</span>\n                <input value={this.state.endMin} type=\"number\" maxLength={2} max={59} min={0} placeholder=\"minutes\" onChange={(e) => this.changeTime(e, 'endMin')}></input><span>:</span>\n                <input type=\"number\" value={this.state.endSec} maxLength={2} max={59} min={0} placeholder=\"seconds\" onChange={(e) => this.changeTime(e, 'endSec')}></input>\n                <button title=\"Start cut\" onClick={this.postCutData} style={{ backgroundColor: 'rgb(0, 136, 255)', fontSize: '18px' }}>cut</button>\n                <button title=\"Add a group of split paramters \" onClick={this.props.add} style={{ backgroundColor: 'rgb(0, 255, 34)' }}>+</button>\n                <button title=\"Remove a group of split paramters \" onClick={()=>this.props.remove(this.props.index)} style={{ backgroundColor: 'rgb(255, 0, 0)' }}>-</button>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { getSource, uploadConevent } from '../../tools/networker';\nimport styles from './style.css';\nimport AudioSplit from '../audioSplit/index';\nimport SplitParams from '../splitParam/index'\nconst exRule = ['audio/mp3', 'audio/wma', 'audio/flac', 'audio/acc', 'audio/mmf', 'audio/amr', 'audio/m4a', 'audio/m4r', 'audio/ogg', 'audio/mp2', 'audio/wav', 'audio/wv'];\nexport default class Audio extends Component {\n    constructor(props) {\n        super(props);\n        this.audio = React.createRef();\n        this.muiltFileButton = React.createRef();\n        this.state = {\n            sampleRate: 16000,\n            countOfChannel: 1,\n            bitdpth: 'pcm_s16be',\n            file: undefined,\n            fileName: '',\n            outputFormat: 'audio/wav',\n            fileInformation: [],\n            audioSrc: 'http://112.74.165.209:3030/audio_test.mp3',\n            splitArray: [],\n            muiltConvert: 'disabled',\n            autoSplit: true,\n            hiddenParamArea:false\n        }\n    }\n    componentDidMount() {\n        this.addNewSplitParam();\n    }\n    handlerFile = e => {\n        const files = e.target.files\n        if (files.length === 0) {\n            return;\n        }\n        if (files.length === 1) {\n            const extname = files[0].type;\n            if (!exRule.includes(extname)) {\n                alert(\"只能上传音频\");\n                return;\n            }\n            this.setState({\n                file: files[0],\n                fileName: files[0].name,\n                muiltConvert: 'disabled'\n            })\n        } else {\n            const data = [...files];\n            const nameList = data.map(item => (item.name))\n            this.setState({\n                file: data,\n                fileName: nameList,\n                muiltConvert: false\n            })\n            console.log(nameList)\n        }\n    }\n    submit = () => {\n        const fd = new FormData();\n        const url = window.location.origin + \"/uploadConvert\";\n        fd.append('filename', this.state.fileName)\n        fd.append('file', this.state.file)\n        fd.append('sampleRate', this.state.sampleRate)\n        fd.append('bitdpth', this.state.bitdpth)\n        fd.append('countOfChannel', this.state.countOfChannel);\n        fd.append('format', this.state.outputFormat)\n        uploadConevent(url, fd).then(data => {\n            this.setState({\n                fileInformation: JSON.parse(data.srcElement.response)\n            });\n        })\n    }\n    submitMulitpleAudio = () => {\n        const fd = new FormData();\n        const url = window.location.origin + \"/mulitpleAudioConvert\";\n        console.log(this.state.file instanceof Array)\n        if (this.state.file instanceof Array) {\n            this.state.file.map(item => {\n                fd.append('files', item, item.name)\n            })\n        } else {\n            alert('请使用单文件上传功能');\n            return;\n        }\n        fd.append('filename', this.state.fileName)\n        fd.append('sampleRate', this.state.sampleRate)\n        fd.append('bitdpth', this.state.bitdpth)\n        fd.append('countOfChannel', this.state.countOfChannel);\n        fd.append('format', this.state.outputFormat)\n        uploadConevent(url, fd).then(data => {\n            this.setState({\n                fileInformation: JSON.parse(data.srcElement.response)\n            });\n            // console.log(JSON.parse(data.srcElement.response));\n        })\n    }\n    removeParams = async (itemKey) => {\n        let split = this.state.splitArray.concat();\n        let temp = await this.state.splitArray.map((item, index) => {\n            if (itemKey === item.index) {\n                split.slice(index, index + 1);\n            } else {\n                return item;\n            }\n        });\n        this.setState({\n            splitArray: temp.filter(value => value !== undefined)\n        })\n    }\n    addNewSplitParam = () => {\n        let split = this.state.splitArray.concat(), index = Date.now();\n        split.push({\n            element: <SplitParams index={index} key={index} add={this.addNewSplitParam} remove={this.removeParams} />,\n            index: index\n        })\n        this.setState({\n            splitArray: split\n        })\n    }\n    parameterAreaStatus = () =>{\n        if(this.state.hiddenParamArea){\n            this.setState({\n                hiddenParamArea:false\n            });\n        }else{\n            this.setState({\n                hiddenParamArea:true\n            });\n        }  \n    }\n    render() {\n        return (\n            <div className={styles.container}>\n                <div style={this.state.hiddenParamArea?{display:'none'}:{}} className={styles.parameterArea} >\n                    <header>目标文件参数设定：</header>\n                    <div className={styles.parameterItem}>\n                        <label>Sample Rate</label>\n                        <select onChange={data => {\n                            this.setState({\n                                sampleRate: data.target.value\n                            })\n                        }}>\n                            <option value=\"8000\" >8000hz </option>\n                            <option value=\"16000\">16000hz</option>\n                            <option value=\"44100\">44100hz</option>\n                            <option value=\"48000\">48000zh</option>\n                        </select>\n                    </div>\n                    <div className={styles.parameterItem}>\n                        <label>Count Of Channel</label>\n                        <select onChange={data => {\n                            this.setState({\n                                countOfChannel: data.target.value\n                            })\n                        }}>\n                            <option value=\"1\" >1 </option>\n                            <option value=\"2\">2 </option>\n                            <option value=\"4\">4 </option>\n                            <option value=\"5.1\">5.1</option>\n                        </select>\n                    </div>\n                    <div className={styles.parameterItem}>\n                        <label>bitdpth</label>\n                        <select onChange={data => {\n                            this.setState({\n                                bitdpth: data.target.value\n                            })\n                        }}>\n                            <option value=\"pcm_s16be\">16bit</option>\n                            <option value=\"pcm_u8\">8bit</option>\n                            <option value=\"pcm_s32be\">32bit</option>\n                        </select>\n                    </div>\n                    <div className={styles.parameterItem}>\n                        <label>Format</label>\n                        <select onChange={data => {\n                            this.setState({\n                                outputFormat: data.target.value\n                            })\n                        }}>\n                            {exRule.map((item, index) => (\n                                <option value={item} key={index}>\n                                    {item}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n                </div>\n                <div className={styles.menu}>\n                    <div>选择文件\n                            <input type=\"file\" multiple onChange={e => this.handlerFile(e)} />\n                    </div>\n                    <button style={{\n                        backgroundColor:this.state.muiltConvert?'':'rgba(59, 136, 255,.8)'\n                    }} disabled={this.state.muiltConvert === 'disabled' ? false : 'disabled'} onClick={this.submit}>单文件转换</button>\n                    <button style={{\n                        backgroundColor:this.state.muiltConvert?'rgba(59, 136, 255,.8)':''\n                    }} disabled={this.state.muiltConvert} onClick={this.submitMulitpleAudio}>多文件转换</button>\n                    <button onClick={() => this.setState({ autoSplit: true })}>自动切割</button>\n                    <button onClick={() => this.setState({ autoSplit: false })}>手动切割</button>\n                    <button onClick={this.parameterAreaStatus}>\n                        {this.state.hiddenParamArea?'展开参数设置':'收起参数设置'}\n                    </button>\n                </div>\n                <div\n                    // onClick={\n                    //     ()=>this.setState({\n                    //     audioSrc: 'http://112.74.165.209:5000/static/default/Ace组合-楚地无歌.mp3'\n                    // })} \n                    className={styles.fileInformation}>\n                    {this.state.autoSplit ? <div>\n                        {\n                            this.state.fileInformation instanceof Array ?\n                                this.state.fileInformation.map((item, index) => (\n                                    index > 1 ? <p key={index}>{item}</p> : ''\n                                )) : <p>{this.state.fileInformation.descripiton}</p>\n                        }\n                    </div> :\n                        <div style={{ height: '100%', width: '100%' }}>\n                            <AudioSplit audioSrc={this.state.audioSrc} />\n                            <div className={styles.splitParamsArea}>\n                                {this.state.splitArray.map(item => (item.element))}\n                            </div>\n                        </div>}\n\n                </div>\n            </div>\n        )\n    }\n}\n","export const IS_LOGIN = 'isLogin',\n    UNLOGIN = 'unlogin';\nexport const isLogin = state => ({\n    type: 'isLogin',\n    status: false\n});","import { combineReducers } from 'redux';\nimport { isLogin } from '../component/signIn/reducers';\nconst reducers = combineReducers({\n    isLogin: isLogin,\n})\nexport default reducers;","import * as actions from './action';\nexport const isLogin = (state = actions.isLogin, action) => {\n    switch (action.type) {\n        case actions.IS_LOGIN:\n            action.status = true;\n            return action;\n        case actions.UNLOGIN:\n            action.state = false;\n            return action;\n        default: return state;\n    }\n}","import { createStore } from 'redux';\nimport reducers from './reducers';\nconst store = createStore(reducers);\nexport default store;","import React, { Component } from 'react';\nimport * as cookie from 'react-cookie';\nimport { instanceOf } from 'prop-types';\nimport { post } from '../../tools/networker';\nimport styles from './style.css';\nimport store from '../../store/index';\nimport * as action from './action';\nclass SignIn extends Component {\n    static propTypes = {\n        cookies: instanceOf(cookie.Cookies).isRequired\n    };\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: '',\n            password: '',\n            root: NaN,\n            user_id: NaN,\n            user_name: ''\n        }\n    }\n    componentDidMount() {\n        console.log(this.props.cookies.getAll())\n    }\n    isLogin = () => {\n\n    }\n    hidden = () => {\n        store.dispatch({\n            type: action.UNLOGIN\n        })\n    }\n    login = () => {\n        const cookieOption = {\n            expires: new Date(Date.now() + 86400000)\n        }\n        if (this.state.account === '' || this.state.password === '') {\n            alert('账号和密码不能为空');\n            return;\n        }\n        const url = 'http://112.74.165.209:5000/signIn';\n        post(url, JSON.stringify({\n            password: this.state.password,\n            account: this.state.account\n        })).then(data => {\n            this.hidden();\n        })\n    }\n    render() {\n        return (\n            <div className={styles.container}>\n                <div className={styles.formArea}>\n                    <header>\n                        Sign In\n                    </header>\n                    <div className={styles.inputArea}>\n                        <input className={styles.input} onChange={e => {\n                            console.log(e.target.value)\n                            this.setState({\n                                account: e.target.value\n                            })\n                        }} placeholder=\"account\" />\n                        <input className={styles.input} type=\"password\" onChange={e => {\n                            this.setState({\n                                password: e.target.value\n                            })\n                        }} placeholder=\"password\" />\n                    </div>\n                    <div className={styles.buttonGroup}>\n                        <button onClick={this.login}>Login</button>\n                        <button onClick={this.hidden}>Cancel</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default cookie.withCookies(SignIn);","import React, { Component } from 'react';\nimport store from '../../store/index';\nimport * as action from '../signIn/action';\nimport styles from './styles.css';\nexport default class AudioList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginPageStatus:false\n        }\n    }\n    showLoginPage =()=>{\n        store.dispatch({\n            type:action.IS_LOGIN\n        })\n    }\n    render() {\n        return (\n            <div className={styles.container}>\n                <div className={styles.userInfo}>\n                    <div className={styles.header}>\n                        <div>\n                            <img/>\n                        </div>\n                        <div className={styles.loginController}>\n                            <button onClick={this.showLoginPage}>登录</button>\n                        </div>\n                    </div>\n                    <div className={styles.userDesc}>test</div>\n                </div>\n                <div className={styles.listContainer}></div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport Audio from '../audio/index';\nimport store from '../../store/index';\nimport SignIn from '../signIn/index';\nimport AudioList from '../audioList/index';\nexport default class ProgressBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLogin: false\n        }\n    }\n    componentDidMount() {\n        store.subscribe(() => {\n            const data =store.getState().isLogin;\n            this.setState({\n                isLogin: data.status\n            })\n        })\n    }\n    render() {\n        return (\n            <div style={{ display: 'flex' }}>\n                <AudioList />\n                {\n                    this.state.isLogin ? <SignIn /> : null\n                }\n                <Audio />\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport ProgressBar from './component/progressBar/index';\nimport { CookiesProvider } from 'react-cookie'\nclass App extends Component {\n  render() {\n    return (\n      <CookiesProvider>\n        <div >\n          <ProgressBar />\n        </div>\n      </CookiesProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/index';\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3Rn5ZzaT7vtl8s-S7YCVjY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playlist-time-scale\":\"_1uiCRAZLLbNiIPnuAjUSIT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2gMcu1GDOEnrQrj57UudCk\",\"parameterArea\":\"_2xOI6JUwuFfYt-Df5yHsf2\",\"parameterItem\":\"_2JBQxehD-n--j5OSIVOCHA\",\"menu\":\"obxUaMUALO_qfzoscZCwc\",\"fileInformation\":\"_21b1lAiTKpj2vz98ZgpuHX\",\"splitParamsArea\":\"vQ6OU02pBnQvnWbsu2eXf\"};"],"sourceRoot":""}