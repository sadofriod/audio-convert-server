{"version":3,"sources":["App.css","tools/networker.js","component/audio/index.js","component/signIn/action.js","store/reducers.js","component/signIn/reducers.js","store/index.js","component/signIn/index.js","component/audioList/index.js","component/progressBar/index.js","App.js","serviceWorker.js","index.js","component/audio/style.css","component/signIn/style.css","component/audioList/styles.css"],"names":["module","exports","App","App-logo","App-logo-spin","App-header","App-link","uploadConevent","url","obj","console","log","Promise","res","rej","xhr","XMLHttpRequest","open","send","onreadystatechange","data","srcElement","status","readyState","post","setRequestHeader","withCredentials","exRule","Audio","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlerFile","e","files","target","length","extname","type","includes","alert","setState","file","fileName","name","toConsumableArray","nameList","map","item","submit","fd","FormData","window","location","origin","append","state","sampleRate","bitdpth","countOfChannel","outputFormat","then","fileInformation","JSON","parse","response","stderr","submitMulitpleAudio","Array","audio","React","createRef","undefined","_this2","react_default","a","createElement","className","styles","container","parameterArea","parameterItem","onChange","value","index","key","onClick","multiple","placeholder","Component","IS_LOGIN","UNLOGIN","isLogin","reducers","combineReducers","arguments","actions","action","store","createStore","SignIn","hidden","dispatch","login","Date","now","account","password","stringify","root","NaN","user_id","user_name","cookies","getAll","formArea","inputArea","input","buttonGroup","cookie","AudioList","showLoginPage","loginPageStatus","userInfo","header","loginController","userDesc","listContainer","ProgressBar","subscribe","getState","style","display","audioList_AudioList","signIn","audio_Audio","es6","progressBar_ProgressBar","Boolean","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.451e3a5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_3Ge-CIdMbROGJFA06DTnds\",\"App-logo\":\"S1LueT9M4QSOTquar826M\",\"App-logo-spin\":\"_2zbnzgnYyXt1P54dmldOdh\",\"App-header\":\"_1mzDF1MhAg2ItVJGFPVYW0\",\"App-link\":\"_2IVtctMzgDks-Pbg2govDv\"};","// import { get } from \"http\";\r\nconst getSource = (url, audioCtx) => {\r\n    return new Promise((res, rej) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.onload = () => {\r\n            let audioData = xhr.response;\r\n            audioCtx.decodeAudioData(audioData, (buffer) => {\r\n                res(buffer);\r\n            },\r\n                function (e) { console.log(\"Error with decoding audio data\" + e.err); });\r\n\r\n        }\r\n        xhr.send();\r\n    });\r\n}\r\nconst uploadConevent = (url, obj) => {\r\n    console.log(obj)\r\n    return new Promise((res, rej) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('POST', url);\r\n        xhr.send(obj);\r\n        xhr.onreadystatechange = data => {\r\n            if (data.srcElement.status === 200) {\r\n                if (data.srcElement.readyState === 4) {\r\n                    res(data);\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\nconst post = (url, obj) => {\r\n    return new Promise((res, rej) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('POST', url);\r\n        xhr.setRequestHeader('Content-type','application/json');\r\n        xhr.withCredentials = true;\r\n        xhr.send(obj);\r\n        xhr.onreadystatechange = data => {\r\n            if (data.srcElement.status === 200) {\r\n                if (data.srcElement.readyState === 4) {\r\n                    res(data.srcElement);\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\nexport {\r\n    getSource, uploadConevent, post\r\n}","import React, { Component } from 'react';\r\nimport { getSource, uploadConevent } from '../../tools/networker';\r\nimport styles from './style.css';\r\nconst exRule = ['audio/mp3', 'audio/wma', 'audio/flac', 'audio/acc', 'audio/mmf', 'audio/amr', 'audio/m4a', 'audio/m4r', 'audio/ogg', 'audio/mp2', 'audio/wav', 'audio/wv'];\r\nexport default class Audio extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.audio = React.createRef();\r\n        this.state = {\r\n            sampleRate: 16000,\r\n            countOfChannel: 1,\r\n            bitdpth: 'pcm_s16be',\r\n            file: undefined,\r\n            fileName: '',\r\n            outputFormat: 'audio/wav',\r\n            fileInformation: [],\r\n        }\r\n    }\r\n    componentDidMount() { \r\n        console.log(window.location.origin)\r\n\r\n     }\r\n    handlerFile = e => {\r\n        const files = e.target.files\r\n        if (files.length === 0) {\r\n            return;\r\n        }\r\n        if (files.length === 1) {\r\n            const extname = files[0].type;\r\n            if (!exRule.includes(extname)) {\r\n                alert(\"只能上传音频\");\r\n                return;\r\n            }\r\n            this.setState({\r\n                file: files[0],\r\n                fileName: files[0].name\r\n            })\r\n        } else {\r\n            const data = [...files];\r\n            const nameList = data.map(item => (item.name))\r\n            this.setState({\r\n                file: data,\r\n                fileName: nameList\r\n            })\r\n            console.log(nameList)\r\n        }\r\n    }\r\n    submit = () => {\r\n        const fd = new FormData();\r\n        const url = window.location.origin + \"/uploadConvert\";\r\n        fd.append('filename', this.state.fileName)\r\n        fd.append('file', this.state.file)\r\n        fd.append('sampleRate', this.state.sampleRate)\r\n        fd.append('bitdpth', this.state.bitdpth)\r\n        fd.append('countOfChannel', this.state.countOfChannel);\r\n        fd.append('format', this.state.outputFormat)\r\n        uploadConevent(url, fd).then(data => {\r\n            this.setState({\r\n                fileInformation: JSON.parse(data.srcElement.response).stderr\r\n            });\r\n        })\r\n    }\r\n    submitMulitpleAudio = () => {\r\n        const fd = new FormData();\r\n        const url = window.location.origin +\"/mulitpleAudioConvert\";\r\n        console.log(this.state.file instanceof Array)\r\n        if (this.state.file instanceof Array) {\r\n            this.state.file.map(item => {\r\n                fd.append('files', item, item.name)\r\n            })\r\n        }else{\r\n            alert('请使用单文件上传功能');\r\n            return;\r\n        }\r\n        fd.append('filename', this.state.fileName)\r\n        fd.append('sampleRate', this.state.sampleRate)\r\n        fd.append('bitdpth', this.state.bitdpth)\r\n        fd.append('countOfChannel', this.state.countOfChannel);\r\n        fd.append('format', this.state.outputFormat)\r\n        uploadConevent(url, fd).then(data => {\r\n            // this.setState({\r\n            //     fileInformation: JSON.parse(data.srcElement.response)\r\n            // });\r\n            console.log(JSON.parse(data.srcElement.response));\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.parameterArea}>\r\n                    <div className={styles.parameterItem}>\r\n                        <label>Sample Rate</label>\r\n                        <select onChange={data => {\r\n                            this.setState({\r\n                                sampleRate: data.target.value\r\n                            })\r\n                        }}>\r\n                            <option value=\"8000\" >8000hz </option>\r\n                            <option value=\"16000\">16000hz</option>\r\n                            <option value=\"44100\">44100hz</option>\r\n                            <option value=\"48000\">48000zh</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className={styles.parameterItem}>\r\n                        <label>Count Of Channel</label>\r\n                        <select onChange={data => {\r\n                            this.setState({\r\n                                countOfChannel: data.target.value\r\n                            })\r\n                        }}>\r\n                            <option value=\"1\" >1 </option>\r\n                            <option value=\"2\">2 </option>\r\n                            <option value=\"4\">4 </option>\r\n                            <option value=\"5.1\">5.1</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className={styles.parameterItem}>\r\n                        <label>bitdpth</label>\r\n                        <select onChange={data => {\r\n                            this.setState({\r\n                                bitdpth: data.target.value\r\n                            })\r\n                        }}>\r\n                            <option value=\"pcm_s16be\">16bit</option>\r\n                            <option value=\"pcm_u8\">8bit</option>\r\n                            <option value=\"pcm_s32be\">32bit</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className={styles.parameterItem}>\r\n                        <label>Format</label>\r\n                        <select onChange={data => {\r\n                            this.setState({\r\n                                outputFormat: data.target.value\r\n                            })\r\n                        }}>\r\n                            {exRule.map((item, index) => (\r\n                                <option value={item} key={index}>\r\n                                    {item}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className={styles.parameterItem}>\r\n                        <div>单文件上传</div>\r\n                        <input type=\"file\" onChange={e => this.handlerFile(e)} />\r\n                        <button onClick={this.submit}>submit</button>\r\n                    </div>\r\n                    <div className={styles.parameterItem}>\r\n                        <div>多文件上传</div>\r\n                        <input type=\"file\" multiple placeholder=\"多文件上传\" onChange={e => this.handlerFile(e)} />\r\n                        <button onClick={this.submitMulitpleAudio}>submit</button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.fileInformation}>\r\n                    {\r\n                        this.state.fileInformation.length ?\r\n                            this.state.fileInformation.map((item, index) => (\r\n                                index > 1 ? <p key={index}>{item}</p> : ''\r\n                            )) : <p>暂无音频文件信息数据</p>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export const IS_LOGIN = 'isLogin',\r\n    UNLOGIN = 'unlogin';\r\nexport const isLogin = state => ({\r\n    type: 'isLogin',\r\n    status: false\r\n});","import { combineReducers } from 'redux';\r\nimport { isLogin } from '../component/signIn/reducers';\r\nconst reducers = combineReducers({\r\n    isLogin: isLogin,\r\n})\r\nexport default reducers;","import * as actions from './action';\r\nexport const isLogin = (state = actions.isLogin, action) => {\r\n    switch (action.type) {\r\n        case actions.IS_LOGIN:\r\n            action.status = true;\r\n            return action;\r\n        case actions.UNLOGIN:\r\n            action.state = false;\r\n            return action;\r\n        default: return state;\r\n    }\r\n}","import { createStore } from 'redux';\r\nimport reducers from './reducers';\r\nconst store = createStore(reducers);\r\nexport default store;","import React, { Component } from 'react';\r\nimport * as cookie from 'react-cookie';\r\nimport { instanceOf } from 'prop-types';\r\nimport { post } from '../../tools/networker';\r\nimport styles from './style.css';\r\nimport store from '../../store/index';\r\nimport * as action from './action';\r\nclass SignIn extends Component {\r\n    static propTypes = {\r\n        cookies: instanceOf(cookie.Cookies).isRequired\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            account: '',\r\n            password: '',\r\n            root: NaN,\r\n            user_id: NaN,\r\n            user_name: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.cookies.getAll())\r\n    }\r\n    isLogin = () => {\r\n\r\n    }\r\n    hidden = () =>{\r\n        store.dispatch({\r\n            type: action.UNLOGIN\r\n        })\r\n    }\r\n    login = () => {\r\n        const cookieOption = {\r\n            expires: new Date(Date.now() + 86400000)\r\n        }\r\n        if (this.state.account === '' || this.state.password === '') {\r\n            alert('账号和密码不能为空');\r\n            return;\r\n        }\r\n        const url = 'http://112.74.165.209:5000/signIn';\r\n        post(url, JSON.stringify({\r\n            password: this.state.password,\r\n            account: this.state.account\r\n        })).then(data => {\r\n            this.hidden();\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.formArea}>\r\n                    <header>\r\n                        Sign In\r\n                    </header>\r\n                    <div className={styles.inputArea}>\r\n                        <input className={styles.input} onChange={e => {\r\n                            console.log(e.target.value)\r\n                            this.setState({\r\n                                account: e.target.value\r\n                            })\r\n                        }} placeholder=\"account\" />\r\n                        <input className={styles.input} type=\"password\" onChange={e => {\r\n                            this.setState({\r\n                                password: e.target.value\r\n                            })\r\n                        }} placeholder=\"password\" />\r\n                    </div>\r\n                    <div className={styles.buttonGroup}>\r\n                        <button onClick={this.login}>Login</button>\r\n                        <button onClick={this.hidden}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default cookie.withCookies(SignIn);","import React, { Component } from 'react';\r\nimport store from '../../store/index';\r\nimport * as action from '../signIn/action';\r\nimport styles from './styles.css';\r\nexport default class AudioList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginPageStatus:false\r\n        }\r\n    }\r\n    showLoginPage =()=>{\r\n        store.dispatch({\r\n            type:action.IS_LOGIN\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.userInfo}>\r\n                    <div className={styles.header}>\r\n                        <div>\r\n                            <img/>\r\n                        </div>\r\n                        <div className={styles.loginController}>\r\n                            <button onClick={this.showLoginPage}>登录</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.userDesc}>test</div>\r\n                </div>\r\n                <div className={styles.listContainer}></div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Audio from '../audio/index';\r\nimport store from '../../store/index';\r\nimport SignIn from '../signIn/index';\r\nimport AudioList from '../audioList/index';\r\nexport default class ProgressBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogin: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        store.subscribe(() => {\r\n            const data =store.getState().isLogin;\r\n            this.setState({\r\n                isLogin: data.status\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ display: 'flex' }}>\r\n                <AudioList />\r\n                {\r\n                    this.state.isLogin ? <SignIn /> : null\r\n                }\r\n                <Audio />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport ProgressBar from './component/progressBar/index';\nimport { CookiesProvider } from 'react-cookie'\nclass App extends Component {\n  render() {\n    return (\n      <CookiesProvider>\n        <div >\n          <ProgressBar />\n        </div>\n      </CookiesProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/index';\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3-Kms7ivIksqST6KwLvNL1\",\"parameterArea\":\"ejyOce3akxhxHrbMmPJQa\",\"parameterItem\":\"AD04LXcqFtxQ-_oSaNDPm\",\"fileInformation\":\"_14X8XHInQGnH0I9FhawVA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_1PeTkXY6AFvIvOtdnljpS_\",\"formArea\":\"_1KUUbiUpjzBig1SjtGWefC\",\"inputArea\":\"Vc5SwQ1tsYZW2EI_uA_en\",\"input\":\"_1up4beCNhTwtmBeJroqieE\",\"buttonGroup\":\"_3d8TBGHD1XGu59h5vOqZBC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2jotBXv1fs0QwJnlvv6EQ-\",\"userInfo\":\"FbgoVtU2f_1OOgnmXLcQj\",\"header\":\"_3_qoOCs3gtV-XsefrOvrXZ\",\"loginController\":\"_1hs6jOJPNEaZHDXvKU8RRj\",\"userDesc\":\"_2fbVFWRCtlcPF-9KexGbMU\"};"],"sourceRoot":""}